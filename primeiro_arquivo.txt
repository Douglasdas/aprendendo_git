Criando pastas no diretório:
mkdir [teste]
Entrar na pasta: 
cd teste

Iniciando os trabalhos:
git init (insere pasta oculta .git)
Criando arquivos na pasta:
touch [Comandos.txt] (exemplo de arquivo)
Verificar as modificações:
git status 
Precisa dar um git add Comandos.txt
Lista com arquivos para serem ignorados:
Arquivo .gitignore criado e oculto
Adicionar todos os arquivos:
git add .
Salvar as modificações e insere informações como data, autor, etc:
git commit -m ''[comentário sobre a modificação]''
Verificar as alterações nos arquivos
git diff
Verificar histórico das modificações:
git log
Criar "tags" (rótulos) em pontos específicos de grande mudança: 
git tag -a "[vX.X]" (exemplo)
Criar branch:
git branch [nome do arquivo] ou
git checkout -b [nome do arquivo]
Para mudar de branch
git chekout "main" (branch de destino)
Excluir branch:
git branch -d [nome do arquivo]
Atualização do repositório local com o online
git pull [nome do repositório]
Atualização do repositório online com o local
git push [nome do repositório]
Enviando branch para o repositório
git push origin [nome da branch]


Verificação de códigos para análise de outros desenvolvedores: pull request através do ambiente web



Exemplo de outros comandos básicos 
git branch
touch [exemplo.html]
git status
git add .
git commit -m "[xxxxxxx]"
git push origin master
Clone - como uma branch de um repositório online em um "local".
git clone "url do repositório" (uma pasta será criada)
git push origin master
Merge - Mesclar (unir) duas branches, geralmente na "master"
na branche de destino digite: git merge [branche a unir]



Criando site estático em um repositório no GitHub:
No gitHub no navegador (online), em settings, procurar GitHub Pages e escolher uma branch
Depois criar pequeno arquivo html com corpo e cabeçalho
git add .
git commit -m "[pagina_web]"
git push origin master
Depois abrir no GitHub Pages no navegador













